name: Build and Release Flutter APK
on:
    push:
        branches:
            - main
    workflow_dispatch:
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Cache
              uses: actions/cache@v4
              with:
                  path: ~/.pub-cache
                  key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
                  restore-keys: ${{ runner.os }}-pub-
            - name: Set up Java
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "17"
            # - name: Setup Android SDK Tools
            #   uses: android-actions/setup-android@v3.2.1
            - name: Generate keystore.properties
              run: |
                  cat <<EOF > ./android/key.properties
                  storePassword=${{ secrets.KEYSTORE_PASSWORD }}
                  keyPassword=${{ secrets.KEYSTORE_PASSWORD }}
                  keyAlias=upload
                  storeFile=./upload-keystore.jks
                  EOF
            - name: Decode keystore and create jks
              run: echo "${{ secrets.KEYSTORE_JKS_BASE64 }}" | base64 --decode > ./android/app/upload-keystore.jks
            - name: Set up Flutter
              uses: subosito/flutter-action@v2
              with:
                  channel: "stable"
                  cache: true
            - name: Clean
              run: flutter clean
            - name: Install dependencies
              run: flutter pub get
            - name: Build APK
              run: flutter build apk --release
            - name: Upload APK
              uses: actions/upload-artifact@v4
              with:
                  name: app-release.apk
                  path: build/app/outputs/flutter-apk/app-release.apk
    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download APK
              uses: actions/download-artifact@v4
              with:
                  name: app-release.apk
                  path: .
            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: Release ${{ github.ref_name }}
                  draft: false
                  prerelease: false
            - name: Upload APK to Release
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./app-release.apk
                  asset_name: app-release.apk
                  asset_content_type: application/vnd.android.package-archive
